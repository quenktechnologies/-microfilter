{"version":3,"sources":["../src/parser.js"],"names":[],"mappings":";;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,IAAI,SAAU,YAAU;AACxB,QAAI,IAAE,WAAS,CAAT,EAAW,CAAX,EAAa,EAAb,EAAe,CAAf,EAAiB;AAAC,aAAI,KAAE,MAAG,EAAL,EAAQ,IAAE,EAAE,MAAhB,EAAuB,GAAvB,EAA2B,GAAE,EAAE,CAAF,CAAF,IAAQ,CAAnC,IAAsC,OAAO,EAAP;AAAS,KAAvE;AAAA,QAAwE,MAAI,CAAC,CAAD,EAAG,CAAH,CAA5E;AAAA,QAAkF,MAAI,CAAC,CAAD,EAAG,EAAH,CAAtF;AAAA,QAA6F,MAAI,CAAC,CAAD,EAAG,CAAH,CAAjG;AAAA,QAAuG,MAAI,CAAC,CAAD,EAAG,CAAH,CAA3G;AAAA,QAAiH,MAAI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,CAArH;AAAA,QAAgI,MAAI,CAAC,CAAD,EAAG,EAAH,CAApI;AAAA,QAA2I,MAAI,CAAC,CAAD,EAAG,EAAH,CAA/I;AAAA,QAAsJ,MAAI,CAAC,CAAD,EAAG,EAAH,CAA1J;AAAA,QAAiK,MAAI,CAAC,CAAD,EAAG,EAAH,CAArK;AAAA,QAA4K,MAAI,CAAC,CAAD,EAAG,EAAH,CAAhL;AAAA,QAAuL,MAAI,CAAC,CAAD,EAAG,EAAH,CAA3L;AAAA,QAAkM,MAAI,CAAC,CAAD,EAAG,EAAH,CAAtM;AAAA,QAA6M,MAAI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CAAjN;AAAA,QAAkO,MAAI,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,CAAtO;AAAA,QAA6P,MAAI,CAAC,EAAD,EAAI,EAAJ,CAAjQ;AACA,QAAI,SAAS,EAAC,OAAO,SAAS,KAAT,GAAiB,CAAG,CAA5B;AACb,YAAI,EADS;AAEb,kBAAU,EAAC,SAAQ,CAAT,EAAW,SAAQ,CAAnB,EAAqB,0BAAyB,CAA9C,EAAgD,OAAM,CAAtD,EAAwD,WAAU,CAAlE,EAAoE,UAAS,CAA7E,EAA+E,OAAM,CAArF,EAAuF,MAAK,CAA5F,EAA8F,SAAQ,EAAtG,EAAyG,KAAI,EAA7G,EAAgH,SAAQ,EAAxH,EAA2H,YAAW,EAAtI,EAAyI,KAAI,EAA7I,EAAgJ,cAAa,EAA7J,EAAgK,KAAI,EAApK,EAAuK,KAAI,EAA3K,EAA8K,KAAI,EAAlL,EAAqL,MAAK,EAA1L,EAA6L,MAAK,EAAlM,EAAqM,KAAI,EAAzM,EAA4M,KAAI,EAAhN,EAAmN,QAAO,EAA1N,EAA6N,SAAQ,EAArO,EAAwO,WAAU,EAAlP,EAAqP,SAAQ,EAA7P,EAAgQ,MAAK,EAArQ,EAAwQ,QAAO,EAA/Q,EAAkR,KAAI,EAAtR,EAAyR,WAAU,EAAnS,EAAsS,WAAU,CAAhT,EAAkT,QAAO,CAAzT,EAFG;AAGb,oBAAY,EAAC,GAAE,OAAH,EAAW,GAAE,KAAb,EAAmB,GAAE,KAArB,EAA2B,GAAE,IAA7B,EAAkC,IAAG,OAArC,EAA6C,IAAG,GAAhD,EAAoD,IAAG,GAAvD,EAA2D,IAAG,GAA9D,EAAkE,IAAG,GAArE,EAAyE,IAAG,GAA5E,EAAgF,IAAG,IAAnF,EAAwF,IAAG,IAA3F,EAAgG,IAAG,GAAnG,EAAuG,IAAG,GAA1G,EAA8G,IAAG,MAAjH,EAAwH,IAAG,OAA3H,EAAmI,IAAG,SAAtI,EAAgJ,IAAG,OAAnJ,EAA2J,IAAG,IAA9J,EAAmK,IAAG,MAAtK,EAA6K,IAAG,GAAhL,EAAoL,IAAG,SAAvL,EAHC;AAIb,sBAAc,CAAC,CAAD,EAAG,CAAC,CAAD,EAAG,CAAH,CAAH,EAAS,CAAC,CAAD,EAAG,CAAH,CAAT,EAAe,CAAC,CAAD,EAAG,CAAH,CAAf,EAAqB,CAAC,CAAD,EAAG,CAAH,CAArB,EAA2B,CAAC,CAAD,EAAG,CAAH,CAA3B,EAAiC,CAAC,CAAD,EAAG,CAAH,CAAjC,EAAuC,CAAC,CAAD,EAAG,CAAH,CAAvC,EAA6C,CAAC,EAAD,EAAI,CAAJ,CAA7C,EAAoD,CAAC,EAAD,EAAI,CAAJ,CAApD,EAA2D,CAAC,EAAD,EAAI,CAAJ,CAA3D,EAAkE,CAAC,EAAD,EAAI,CAAJ,CAAlE,EAAyE,CAAC,EAAD,EAAI,CAAJ,CAAzE,EAAgF,CAAC,EAAD,EAAI,CAAJ,CAAhF,EAAuF,CAAC,EAAD,EAAI,CAAJ,CAAvF,EAA8F,CAAC,EAAD,EAAI,CAAJ,CAA9F,EAAqG,CAAC,EAAD,EAAI,CAAJ,CAArG,EAA4G,CAAC,EAAD,EAAI,CAAJ,CAA5G,EAAmH,CAAC,EAAD,EAAI,CAAJ,CAAnH,EAA0H,CAAC,EAAD,EAAI,CAAJ,CAA1H,EAAiI,CAAC,EAAD,EAAI,CAAJ,CAAjI,EAAwI,CAAC,EAAD,EAAI,CAAJ,CAAxI,EAA+I,CAAC,CAAD,EAAG,CAAH,CAA/I,EAAqJ,CAAC,CAAD,EAAG,CAAH,CAArJ,CAJD;AAKb,uBAAe,SAAS,SAAT,CAAmB,MAAnB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,EAA7C,EAAiD,OAAjD,CAAyD,eAAzD,EAA0E,EAA1E,CAA6E,YAA7E,EAA2F,EAA3F,CAA8F,YAA9F,EAA4G;AAC3H;;AAEA,gBAAI,KAAK,GAAG,MAAH,GAAY,CAArB;AACA,oBAAQ,OAAR;AACA,qBAAK,CAAL;AACA,2BAAO,GAAG,GAAH,CAAO,KAAP,CAAa,GAAG,KAAG,CAAN,CAAb,EAAuB,KAAK,EAA5B,CAAP;AACA;AACA,qBAAK,CAAL;AACA,yBAAK,CAAL,GAAS,GAAG,EAAH,CAAT;AACA;AACA,qBAAK,CAAL;AACA,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,GAAP,CAAW,GAAG,KAAG,CAAN,CAAX,EAAqB,GAAG,EAAH,CAArB,EAA6B,KAAK,EAAlC,CAAT;AACA;AACA,qBAAK,CAAL;AACA,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,EAAP,CAAU,GAAG,KAAG,CAAN,CAAV,EAAoB,GAAG,EAAH,CAApB,EAA4B,KAAK,EAAjC,CAAT;AACA;AACA,qBAAK,CAAL;AACA,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,MAAP,CAAc,GAAG,KAAG,CAAN,CAAd,EAAwB,GAAxB,EAA6B,GAAG,EAAH,CAA7B,EAAqC,KAAK,EAA1C,CAAT;AACA;AACA,qBAAK,CAAL;AACA,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,MAAP,CAAc,GAAG,KAAG,CAAN,CAAd,EAAwB,GAAG,KAAG,CAAN,CAAxB,EAAkC,GAAG,EAAH,CAAlC,EAA0C,KAAK,EAA/C,CAAT;AACA;AACA,qBAAK,CAAL;AACA,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,MAAP,CAAc,GAAG,KAAG,CAAN,CAAd,EAAwB,IAAxB,EAA8B,GAAG,KAAG,CAAN,CAA9B,EAAwC,KAAK,EAA7C,CAAT;AACA;AACA,qBAAK,CAAL;AACC,yBAAK,CAAL,GAAS,GAAT;AACD;AACA,qBAAK,CAAL;AACC,yBAAK,CAAL,GAAS,GAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,IAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,IAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,GAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,CAAC,GAAG,EAAH,CAAD,CAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,GAAG,KAAG,CAAN,EAAS,MAAT,CAAgB,GAAG,EAAH,CAAhB,CAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,OAAP,CAAe,IAAf,EAAqB,KAAK,EAA1B,CAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,OAAP,CAAe,KAAf,EAAsB,KAAK,EAA3B,CAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,MAAP,CAAc,SAAS,GAAG,EAAH,CAAT,CAAd,EAAgC,KAAK,EAArC,CAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,MAAP,CAAc,WAAW,GAAG,EAAH,CAAX,CAAd,EAAkC,KAAK,EAAvC,CAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,MAAP,CAAc,GAAG,KAAG,CAAN,CAAd,EAAwB,KAAK,EAA7B,CAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,MAAP,CAAc,GAAG,EAAH,CAAd,EAAsB,KAAK,EAA3B,CAAT;AACD;AACA,qBAAK,EAAL;AACC,yBAAK,CAAL,GAAS,GAAG,GAAH,CAAO,MAAP,CAAc,GAAG,KAAG,CAAN,CAAd,EAAwB,KAAK,EAA7B,CAAT;AACD;AACA,qBAAK,EAAL;AACA,yBAAK,CAAL,GAAS,CAAC,GAAG,EAAH,CAAD,CAAT;AACA;AACA,qBAAK,EAAL;AACA,uBAAG,KAAG,CAAN,EAAS,IAAT,CAAc,GAAG,EAAH,CAAd;AACA;AArEA;AAuEC,SAhFY;AAiFb,eAAO,CAAC,EAAC,GAAE,CAAH,EAAK,GAAE,CAAP,EAAS,GAAE,CAAX,EAAa,GAAE,CAAf,EAAiB,IAAG,GAApB,EAAD,EAA0B,EAAC,GAAE,CAAC,CAAD,CAAH,EAA1B,EAAkC,EAAC,GAAE,CAAC,CAAD,EAAG,CAAH,CAAH,EAAS,GAAE,CAAX,EAAa,GAAE,CAAf,EAAiB,IAAG,GAApB,EAAlC,EAA2D,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,EAAa,EAAC,GAAE,GAAH,EAAO,GAAE,GAAT,EAAb,CAA3D,EAAuF,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,CAAH,CAAN,CAAvF,EAAoG,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAApG,EAAgH,EAAC,GAAE,CAAC,CAAD,EAAG,CAAH,CAAH,EAAhH,EAA0H,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,EAAa,EAAC,GAAE,GAAH,EAAO,GAAE,GAAT,EAAb,CAA1H,EAAsJ,EAAC,GAAE,EAAH,EAAM,IAAG,GAAT,EAAtJ,EAAoK,EAAC,GAAE,EAAH,EAAM,IAAG,GAAT,EAApK,EAAkL,EAAC,IAAG,GAAJ,EAAQ,IAAG,EAAX,EAAc,IAAG,EAAjB,EAAoB,IAAG,CAAC,CAAD,EAAG,EAAH,CAAvB,EAA8B,IAAG,CAAC,CAAD,EAAG,EAAH,CAAjC,EAAwC,IAAG,CAAC,CAAD,EAAG,EAAH,CAA3C,EAAkD,IAAG,CAAC,CAAD,EAAG,EAAH,CAArD,EAA4D,IAAG,CAAC,CAAD,EAAG,EAAH,CAA/D,EAAsE,IAAG,CAAC,CAAD,EAAG,EAAH,CAAzE,EAAgF,IAAG,GAAnF,EAAuF,IAAG,GAA1F,EAA8F,IAAG,GAAjG,EAAqG,IAAG,GAAxG,EAA4G,IAAG,GAA/G,EAAmH,IAAG,GAAtH,EAAlL,EAA6S,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,CAAH,CAAN,CAA7S,EAA0T,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,CAAH,CAAN,CAA1T,EAAuU,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,CAAH,CAAN,CAAvU,EAAoV,EAAC,IAAG,GAAJ,EAAQ,IAAG,EAAX,EAAc,IAAG,GAAjB,EAAqB,IAAG,GAAxB,EAA4B,IAAG,GAA/B,EAAmC,IAAG,GAAtC,EAA0C,IAAG,GAA7C,EAAiD,IAAG,GAApD,EAApV,EAA6Y,EAAC,IAAG,GAAJ,EAAQ,IAAG,EAAX,EAAc,IAAG,EAAjB,EAAoB,IAAG,GAAvB,EAA2B,IAAG,GAA9B,EAAkC,IAAG,GAArC,EAAyC,IAAG,GAA5C,EAAgD,IAAG,GAAnD,EAAuD,IAAG,GAA1D,EAA7Y,EAA4c,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAA5c,EAA0d,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAA1d,EAAwe,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAAxe,EAAsf,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAAtf,EAAogB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAApgB,EAAghB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAAhhB,EAA8hB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA9hB,EAA0iB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,CAAH,CAAN,CAA1iB,EAAujB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,CAAH,CAAN,CAAvjB,EAAokB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAApkB,EAAklB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAAllB,EAAgmB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAAhmB,EAA8mB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,CAAH,CAAN,CAA9mB,EAA2nB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAAW,IAAG,CAAC,CAAD,EAAG,EAAH,CAAd,EAA3nB,EAAipB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAAjpB,EAA+pB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA/pB,EAA2qB,EAAC,IAAG,CAAC,CAAD,EAAG,EAAH,CAAJ,EAA3qB,EAAurB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,CAAH,CAAN,CAAvrB,EAAosB,EAAC,IAAG,GAAJ,EAAQ,IAAG,EAAX,EAAc,IAAG,GAAjB,EAAqB,IAAG,GAAxB,EAA4B,IAAG,GAA/B,EAAmC,IAAG,GAAtC,EAA0C,IAAG,GAA7C,EAAiD,IAAG,GAApD,EAApsB,EAA6vB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAA7vB,EAA2wB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAA3wB,EAAyxB,EAAE,GAAF,EAAM,CAAC,CAAD,EAAG,EAAH,CAAN,CAAzxB,CAjFM;AAkFb,wBAAgB,EAAC,GAAE,CAAC,CAAD,EAAG,CAAH,CAAH,EAlFH;AAmFb,oBAAY,SAAS,UAAT,CAAoB,GAApB,EAAyB,IAAzB,EAA+B;AACvC,gBAAI,KAAK,WAAT,EAAsB;AAClB,qBAAK,KAAL,CAAW,GAAX;AACH,aAFD,MAEO;AAAA,oBACM,WADN,GACH,SAAS,WAAT,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAC7B,yBAAK,OAAL,GAAe,GAAf;AACA,yBAAK,IAAL,GAAY,IAAZ;AACH,iBAJE;;AAKH,4BAAY,SAAZ,GAAwB,KAAxB;;AAEA,sBAAM,IAAI,WAAJ,CAAgB,GAAhB,EAAqB,IAArB,CAAN;AACH;AACJ,SA/FY;AAgGb,eAAO,SAAS,KAAT,CAAe,KAAf,EAAsB;AACzB,gBAAI,OAAO,IAAX;AAAA,gBAAiB,QAAQ,CAAC,CAAD,CAAzB;AAAA,gBAA8B,SAAS,EAAvC;AAAA,gBAA2C,SAAS,CAAC,IAAD,CAApD;AAAA,gBAA4D,SAAS,EAArE;AAAA,gBAAyE,QAAQ,KAAK,KAAtF;AAAA,gBAA6F,SAAS,EAAtG;AAAA,gBAA0G,WAAW,CAArH;AAAA,gBAAwH,SAAS,CAAjI;AAAA,gBAAoI,aAAa,CAAjJ;AAAA,gBAAoJ,SAAS,CAA7J;AAAA,gBAAgK,MAAM,CAAtK;AACA,gBAAI,OAAO,OAAO,KAAP,CAAa,IAAb,CAAkB,SAAlB,EAA6B,CAA7B,CAAX;AACA,gBAAI,QAAQ,OAAO,MAAP,CAAc,KAAK,KAAnB,CAAZ;AACA,gBAAI,cAAc,EAAE,IAAI,EAAN,EAAlB;AACA,iBAAK,IAAI,CAAT,IAAc,KAAK,EAAnB,EAAuB;AACnB,oBAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,KAAK,EAA1C,EAA8C,CAA9C,CAAJ,EAAsD;AAClD,gCAAY,EAAZ,CAAe,CAAf,IAAoB,KAAK,EAAL,CAAQ,CAAR,CAApB;AACH;AACJ;AACD,kBAAM,QAAN,CAAe,KAAf,EAAsB,YAAY,EAAlC;AACA,wBAAY,EAAZ,CAAe,KAAf,GAAuB,KAAvB;AACA,wBAAY,EAAZ,CAAe,MAAf,GAAwB,IAAxB;AACA,gBAAI,OAAO,MAAM,MAAb,IAAuB,WAA3B,EAAwC;AACpC,sBAAM,MAAN,GAAe,EAAf;AACH;AACD,gBAAI,QAAQ,MAAM,MAAlB;AACA,mBAAO,IAAP,CAAY,KAAZ;AACA,gBAAI,SAAS,MAAM,OAAN,IAAiB,MAAM,OAAN,CAAc,MAA5C;AACA,gBAAI,OAAO,YAAY,EAAZ,CAAe,UAAtB,KAAqC,UAAzC,EAAqD;AACjD,qBAAK,UAAL,GAAkB,YAAY,EAAZ,CAAe,UAAjC;AACH,aAFD,MAEO;AACH,qBAAK,UAAL,GAAkB,OAAO,cAAP,CAAsB,IAAtB,EAA4B,UAA9C;AACH;AACD,qBAAS,QAAT,CAAkB,CAAlB,EAAqB;AACjB,sBAAM,MAAN,GAAe,MAAM,MAAN,GAAe,IAAI,CAAlC;AACA,uBAAO,MAAP,GAAgB,OAAO,MAAP,GAAgB,CAAhC;AACA,uBAAO,MAAP,GAAgB,OAAO,MAAP,GAAgB,CAAhC;AACH;AACD,0BACI,IAAI,MAAM,SAAN,GAAM,GAAY;AAClB,oBAAI,KAAJ;AACA,wBAAQ,MAAM,GAAN,MAAe,GAAvB;AACA,oBAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC3B,4BAAQ,KAAK,QAAL,CAAc,KAAd,KAAwB,KAAhC;AACH;AACD,uBAAO,KAAP;AACH,aAPD;AAQJ,gBAAI,MAAJ;AAAA,gBAAY,cAAZ;AAAA,gBAA4B,KAA5B;AAAA,gBAAmC,MAAnC;AAAA,gBAA2C,CAA3C;AAAA,gBAA8C,CAA9C;AAAA,gBAAiD,QAAQ,EAAzD;AAAA,gBAA6D,CAA7D;AAAA,gBAAgE,GAAhE;AAAA,gBAAqE,QAArE;AAAA,gBAA+E,QAA/E;AACA,mBAAO,IAAP,EAAa;AACT,wBAAQ,MAAM,MAAM,MAAN,GAAe,CAArB,CAAR;AACA,oBAAI,KAAK,cAAL,CAAoB,KAApB,CAAJ,EAAgC;AAC5B,6BAAS,KAAK,cAAL,CAAoB,KAApB,CAAT;AACH,iBAFD,MAEO;AACH,wBAAI,WAAW,IAAX,IAAmB,OAAO,MAAP,IAAiB,WAAxC,EAAqD;AACjD,iCAAS,KAAT;AACH;AACD,6BAAS,MAAM,KAAN,KAAgB,MAAM,KAAN,EAAa,MAAb,CAAzB;AACH;AACW,oBAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,CAAC,OAAO,MAAzC,IAAmD,CAAC,OAAO,CAAP,CAAxD,EAAmE;AACvE,wBAAI,SAAS,EAAb;AACA,+BAAW,EAAX;AACA,yBAAK,CAAL,IAAU,MAAM,KAAN,CAAV,EAAwB;AACpB,4BAAI,KAAK,UAAL,CAAgB,CAAhB,KAAsB,IAAI,MAA9B,EAAsC;AAClC,qCAAS,IAAT,CAAc,OAAO,KAAK,UAAL,CAAgB,CAAhB,CAAP,GAA4B,IAA1C;AACH;AACJ;AACD,wBAAI,MAAM,YAAV,EAAwB;AACpB,iCAAS,0BAA0B,WAAW,CAArC,IAA0C,KAA1C,GAAkD,MAAM,YAAN,EAAlD,GAAyE,cAAzE,GAA0F,SAAS,IAAT,CAAc,IAAd,CAA1F,GAAgH,UAAhH,IAA8H,KAAK,UAAL,CAAgB,MAAhB,KAA2B,MAAzJ,IAAmK,IAA5K;AACH,qBAFD,MAEO;AACH,iCAAS,0BAA0B,WAAW,CAArC,IAA0C,eAA1C,IAA6D,UAAU,GAAV,GAAgB,cAAhB,GAAiC,QAAQ,KAAK,UAAL,CAAgB,MAAhB,KAA2B,MAAnC,IAA6C,IAA3I,CAAT;AACH;AACD,yBAAK,UAAL,CAAgB,MAAhB,EAAwB;AACpB,8BAAM,MAAM,KADQ;AAEpB,+BAAO,KAAK,UAAL,CAAgB,MAAhB,KAA2B,MAFd;AAGpB,8BAAM,MAAM,QAHQ;AAIpB,6BAAK,KAJe;AAKpB,kCAAU;AALU,qBAAxB;AAOH;AACL,oBAAI,OAAO,CAAP,aAAqB,KAArB,IAA8B,OAAO,MAAP,GAAgB,CAAlD,EAAqD;AACjD,0BAAM,IAAI,KAAJ,CAAU,sDAAsD,KAAtD,GAA8D,WAA9D,GAA4E,MAAtF,CAAN;AACH;AACD,wBAAQ,OAAO,CAAP,CAAR;AACA,yBAAK,CAAL;AACI,8BAAM,IAAN,CAAW,MAAX;AACA,+BAAO,IAAP,CAAY,MAAM,MAAlB;AACA,+BAAO,IAAP,CAAY,MAAM,MAAlB;AACA,8BAAM,IAAN,CAAW,OAAO,CAAP,CAAX;AACA,iCAAS,IAAT;AACA,4BAAI,CAAC,cAAL,EAAqB;AACjB,qCAAS,MAAM,MAAf;AACA,qCAAS,MAAM,MAAf;AACA,uCAAW,MAAM,QAAjB;AACA,oCAAQ,MAAM,MAAd;AACA,gCAAI,aAAa,CAAjB,EAAoB;AAChB;AACH;AACJ,yBARD,MAQO;AACH,qCAAS,cAAT;AACA,6CAAiB,IAAjB;AACH;AACD;AACJ,yBAAK,CAAL;AACI,8BAAM,KAAK,YAAL,CAAkB,OAAO,CAAP,CAAlB,EAA6B,CAA7B,CAAN;AACA,8BAAM,CAAN,GAAU,OAAO,OAAO,MAAP,GAAgB,GAAvB,CAAV;AACA,8BAAM,EAAN,GAAW;AACP,wCAAY,OAAO,OAAO,MAAP,IAAiB,OAAO,CAAxB,CAAP,EAAmC,UADxC;AAEP,uCAAW,OAAO,OAAO,MAAP,GAAgB,CAAvB,EAA0B,SAF9B;AAGP,0CAAc,OAAO,OAAO,MAAP,IAAiB,OAAO,CAAxB,CAAP,EAAmC,YAH1C;AAIP,yCAAa,OAAO,OAAO,MAAP,GAAgB,CAAvB,EAA0B;AAJhC,yBAAX;AAMA,4BAAI,MAAJ,EAAY;AACR,kCAAM,EAAN,CAAS,KAAT,GAAiB,CACb,OAAO,OAAO,MAAP,IAAiB,OAAO,CAAxB,CAAP,EAAmC,KAAnC,CAAyC,CAAzC,CADa,EAEb,OAAO,OAAO,MAAP,GAAgB,CAAvB,EAA0B,KAA1B,CAAgC,CAAhC,CAFa,CAAjB;AAIH;AACD,4BAAI,KAAK,aAAL,CAAmB,KAAnB,CAAyB,KAAzB,EAAgC,CAChC,MADgC,EAEhC,MAFgC,EAGhC,QAHgC,EAIhC,YAAY,EAJoB,EAKhC,OAAO,CAAP,CALgC,EAMhC,MANgC,EAOhC,MAPgC,EAQlC,MARkC,CAQ3B,IAR2B,CAAhC,CAAJ;AASA,4BAAI,OAAO,CAAP,KAAa,WAAjB,EAA8B;AAC1B,mCAAO,CAAP;AACH;AACD,4BAAI,GAAJ,EAAS;AACL,oCAAQ,MAAM,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAD,GAAK,GAAL,GAAW,CAA1B,CAAR;AACA,qCAAS,OAAO,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAD,GAAK,GAArB,CAAT;AACA,qCAAS,OAAO,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAD,GAAK,GAArB,CAAT;AACH;AACD,8BAAM,IAAN,CAAW,KAAK,YAAL,CAAkB,OAAO,CAAP,CAAlB,EAA6B,CAA7B,CAAX;AACA,+BAAO,IAAP,CAAY,MAAM,CAAlB;AACA,+BAAO,IAAP,CAAY,MAAM,EAAlB;AACA,mCAAW,MAAM,MAAM,MAAM,MAAN,GAAe,CAArB,CAAN,EAA+B,MAAM,MAAM,MAAN,GAAe,CAArB,CAA/B,CAAX;AACA,8BAAM,IAAN,CAAW,QAAX;AACA;AACJ,yBAAK,CAAL;AACI,+BAAO,IAAP;AA3DJ;AA6DH;AACD,mBAAO,IAAP;AACH,SAxOY,EAAb;AAyOA;AACA,QAAI,QAAS,YAAU;AACvB,YAAI,QAAS;;AAEb,iBAAI,CAFS;;AAIb,wBAAW,SAAS,UAAT,CAAoB,GAApB,EAAyB,IAAzB,EAA+B;AAClC,oBAAI,KAAK,EAAL,CAAQ,MAAZ,EAAoB;AAChB,yBAAK,EAAL,CAAQ,MAAR,CAAe,UAAf,CAA0B,GAA1B,EAA+B,IAA/B;AACH,iBAFD,MAEO;AACH,0BAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACH;AACJ,aAVQ;;AAYb;AACA,sBAAS,kBAAU,KAAV,EAAiB,EAAjB,EAAqB;AACtB,qBAAK,EAAL,GAAU,MAAM,KAAK,EAAX,IAAiB,EAA3B;AACA,qBAAK,MAAL,GAAc,KAAd;AACA,qBAAK,KAAL,GAAa,KAAK,UAAL,GAAkB,KAAK,IAAL,GAAY,KAA3C;AACA,qBAAK,QAAL,GAAgB,KAAK,MAAL,GAAc,CAA9B;AACA,qBAAK,MAAL,GAAc,KAAK,OAAL,GAAe,KAAK,KAAL,GAAa,EAA1C;AACA,qBAAK,cAAL,GAAsB,CAAC,SAAD,CAAtB;AACA,qBAAK,MAAL,GAAc;AACV,gCAAY,CADF;AAEV,kCAAc,CAFJ;AAGV,+BAAW,CAHD;AAIV,iCAAa;AAJH,iBAAd;AAMA,oBAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;AACrB,yBAAK,MAAL,CAAY,KAAZ,GAAoB,CAAC,CAAD,EAAG,CAAH,CAApB;AACH;AACD,qBAAK,MAAL,GAAc,CAAd;AACA,uBAAO,IAAP;AACH,aA/BQ;;AAiCb;AACA,mBAAM,iBAAY;AACV,oBAAI,KAAK,KAAK,MAAL,CAAY,CAAZ,CAAT;AACA,qBAAK,MAAL,IAAe,EAAf;AACA,qBAAK,MAAL;AACA,qBAAK,MAAL;AACA,qBAAK,KAAL,IAAc,EAAd;AACA,qBAAK,OAAL,IAAgB,EAAhB;AACA,oBAAI,QAAQ,GAAG,KAAH,CAAS,iBAAT,CAAZ;AACA,oBAAI,KAAJ,EAAW;AACP,yBAAK,QAAL;AACA,yBAAK,MAAL,CAAY,SAAZ;AACH,iBAHD,MAGO;AACH,yBAAK,MAAL,CAAY,WAAZ;AACH;AACD,oBAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;AACrB,yBAAK,MAAL,CAAY,KAAZ,CAAkB,CAAlB;AACH;;AAED,qBAAK,MAAL,GAAc,KAAK,MAAL,CAAY,KAAZ,CAAkB,CAAlB,CAAd;AACA,uBAAO,EAAP;AACH,aAtDQ;;AAwDb;AACA,mBAAM,eAAU,EAAV,EAAc;AACZ,oBAAI,MAAM,GAAG,MAAb;AACA,oBAAI,QAAQ,GAAG,KAAH,CAAS,eAAT,CAAZ;;AAEA,qBAAK,MAAL,GAAc,KAAK,KAAK,MAAxB;AACA,qBAAK,MAAL,GAAc,KAAK,MAAL,CAAY,MAAZ,CAAmB,CAAnB,EAAsB,KAAK,MAAL,CAAY,MAAZ,GAAqB,GAA3C,CAAd;AACA;AACA,qBAAK,MAAL,IAAe,GAAf;AACA,oBAAI,WAAW,KAAK,KAAL,CAAW,KAAX,CAAiB,eAAjB,CAAf;AACA,qBAAK,KAAL,GAAa,KAAK,KAAL,CAAW,MAAX,CAAkB,CAAlB,EAAqB,KAAK,KAAL,CAAW,MAAX,GAAoB,CAAzC,CAAb;AACA,qBAAK,OAAL,GAAe,KAAK,OAAL,CAAa,MAAb,CAAoB,CAApB,EAAuB,KAAK,OAAL,CAAa,MAAb,GAAsB,CAA7C,CAAf;;AAEA,oBAAI,MAAM,MAAN,GAAe,CAAnB,EAAsB;AAClB,yBAAK,QAAL,IAAiB,MAAM,MAAN,GAAe,CAAhC;AACH;AACD,oBAAI,IAAI,KAAK,MAAL,CAAY,KAApB;;AAEA,qBAAK,MAAL,GAAc;AACV,gCAAY,KAAK,MAAL,CAAY,UADd;AAEV,+BAAW,KAAK,QAAL,GAAgB,CAFjB;AAGV,kCAAc,KAAK,MAAL,CAAY,YAHhB;AAIV,iCAAa,QACT,CAAC,MAAM,MAAN,KAAiB,SAAS,MAA1B,GAAmC,KAAK,MAAL,CAAY,YAA/C,GAA8D,CAA/D,IACG,SAAS,SAAS,MAAT,GAAkB,MAAM,MAAjC,EAAyC,MAD5C,GACqD,MAAM,CAAN,EAAS,MAFrD,GAGX,KAAK,MAAL,CAAY,YAAZ,GAA2B;AAPnB,iBAAd;;AAUA,oBAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;AACrB,yBAAK,MAAL,CAAY,KAAZ,GAAoB,CAAC,EAAE,CAAF,CAAD,EAAO,EAAE,CAAF,IAAO,KAAK,MAAZ,GAAqB,GAA5B,CAApB;AACH;AACD,qBAAK,MAAL,GAAc,KAAK,MAAL,CAAY,MAA1B;AACA,uBAAO,IAAP;AACH,aAzFQ;;AA2Fb;AACA,kBAAK,gBAAY;AACT,qBAAK,KAAL,GAAa,IAAb;AACA,uBAAO,IAAP;AACH,aA/FQ;;AAiGb;AACA,oBAAO,kBAAY;AACX,oBAAI,KAAK,OAAL,CAAa,eAAjB,EAAkC;AAC9B,yBAAK,UAAL,GAAkB,IAAlB;AACH,iBAFD,MAEO;AACH,2BAAO,KAAK,UAAL,CAAgB,4BAA4B,KAAK,QAAL,GAAgB,CAA5C,IAAiD,kIAAjD,GAAsL,KAAK,YAAL,EAAtM,EAA2N;AAC9N,8BAAM,EADwN;AAE9N,+BAAO,IAFuN;AAG9N,8BAAM,KAAK;AAHmN,qBAA3N,CAAP;AAMH;AACD,uBAAO,IAAP;AACH,aA9GQ;;AAgHb;AACA,kBAAK,cAAU,CAAV,EAAa;AACV,qBAAK,KAAL,CAAW,KAAK,KAAL,CAAW,KAAX,CAAiB,CAAjB,CAAX;AACH,aAnHQ;;AAqHb;AACA,uBAAU,qBAAY;AACd,oBAAI,OAAO,KAAK,OAAL,CAAa,MAAb,CAAoB,CAApB,EAAuB,KAAK,OAAL,CAAa,MAAb,GAAsB,KAAK,KAAL,CAAW,MAAxD,CAAX;AACA,uBAAO,CAAC,KAAK,MAAL,GAAc,EAAd,GAAmB,KAAnB,GAAyB,EAA1B,IAAgC,KAAK,MAAL,CAAY,CAAC,EAAb,EAAiB,OAAjB,CAAyB,KAAzB,EAAgC,EAAhC,CAAvC;AACH,aAzHQ;;AA2Hb;AACA,2BAAc,yBAAY;AAClB,oBAAI,OAAO,KAAK,KAAhB;AACA,oBAAI,KAAK,MAAL,GAAc,EAAlB,EAAsB;AAClB,4BAAQ,KAAK,MAAL,CAAY,MAAZ,CAAmB,CAAnB,EAAsB,KAAG,KAAK,MAA9B,CAAR;AACH;AACD,uBAAO,CAAC,KAAK,MAAL,CAAY,CAAZ,EAAc,EAAd,KAAqB,KAAK,MAAL,GAAc,EAAd,GAAmB,KAAnB,GAA2B,EAAhD,CAAD,EAAsD,OAAtD,CAA8D,KAA9D,EAAqE,EAArE,CAAP;AACH,aAlIQ;;AAoIb;AACA,0BAAa,wBAAY;AACjB,oBAAI,MAAM,KAAK,SAAL,EAAV;AACA,oBAAI,IAAI,IAAI,KAAJ,CAAU,IAAI,MAAJ,GAAa,CAAvB,EAA0B,IAA1B,CAA+B,GAA/B,CAAR;AACA,uBAAO,MAAM,KAAK,aAAL,EAAN,GAA6B,IAA7B,GAAoC,CAApC,GAAwC,GAA/C;AACH,aAzIQ;;AA2Ib;AACA,wBAAW,oBAAU,KAAV,EAAiB,YAAjB,EAA+B;AAClC,oBAAI,KAAJ,EACI,KADJ,EAEI,MAFJ;;AAIA,oBAAI,KAAK,OAAL,CAAa,eAAjB,EAAkC;AAC9B;AACA,6BAAS;AACL,kCAAU,KAAK,QADV;AAEL,gCAAQ;AACJ,wCAAY,KAAK,MAAL,CAAY,UADpB;AAEJ,uCAAW,KAAK,SAFZ;AAGJ,0CAAc,KAAK,MAAL,CAAY,YAHtB;AAIJ,yCAAa,KAAK,MAAL,CAAY;AAJrB,yBAFH;AAQL,gCAAQ,KAAK,MARR;AASL,+BAAO,KAAK,KATP;AAUL,iCAAS,KAAK,OAVT;AAWL,iCAAS,KAAK,OAXT;AAYL,gCAAQ,KAAK,MAZR;AAaL,gCAAQ,KAAK,MAbR;AAcL,+BAAO,KAAK,KAdP;AAeL,gCAAQ,KAAK,MAfR;AAgBL,4BAAI,KAAK,EAhBJ;AAiBL,wCAAgB,KAAK,cAAL,CAAoB,KAApB,CAA0B,CAA1B,CAjBX;AAkBL,8BAAM,KAAK;AAlBN,qBAAT;AAoBA,wBAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;AACrB,+BAAO,MAAP,CAAc,KAAd,GAAsB,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAlB,CAAwB,CAAxB,CAAtB;AACH;AACJ;;AAED,wBAAQ,MAAM,CAAN,EAAS,KAAT,CAAe,iBAAf,CAAR;AACA,oBAAI,KAAJ,EAAW;AACP,yBAAK,QAAL,IAAiB,MAAM,MAAvB;AACH;AACD,qBAAK,MAAL,GAAc;AACV,gCAAY,KAAK,MAAL,CAAY,SADd;AAEV,+BAAW,KAAK,QAAL,GAAgB,CAFjB;AAGV,kCAAc,KAAK,MAAL,CAAY,WAHhB;AAIV,iCAAa,QACA,MAAM,MAAM,MAAN,GAAe,CAArB,EAAwB,MAAxB,GAAiC,MAAM,MAAM,MAAN,GAAe,CAArB,EAAwB,KAAxB,CAA8B,QAA9B,EAAwC,CAAxC,EAA2C,MAD5E,GAEA,KAAK,MAAL,CAAY,WAAZ,GAA0B,MAAM,CAAN,EAAS;AANtC,iBAAd;AAQA,qBAAK,MAAL,IAAe,MAAM,CAAN,CAAf;AACA,qBAAK,KAAL,IAAc,MAAM,CAAN,CAAd;AACA,qBAAK,OAAL,GAAe,KAAf;AACA,qBAAK,MAAL,GAAc,KAAK,MAAL,CAAY,MAA1B;AACA,oBAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;AACrB,yBAAK,MAAL,CAAY,KAAZ,GAAoB,CAAC,KAAK,MAAN,EAAc,KAAK,MAAL,IAAe,KAAK,MAAlC,CAApB;AACH;AACD,qBAAK,KAAL,GAAa,KAAb;AACA,qBAAK,UAAL,GAAkB,KAAlB;AACA,qBAAK,MAAL,GAAc,KAAK,MAAL,CAAY,KAAZ,CAAkB,MAAM,CAAN,EAAS,MAA3B,CAAd;AACA,qBAAK,OAAL,IAAgB,MAAM,CAAN,CAAhB;AACA,wBAAQ,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,EAA8B,KAAK,EAAnC,EAAuC,IAAvC,EAA6C,YAA7C,EAA2D,KAAK,cAAL,CAAoB,KAAK,cAAL,CAAoB,MAApB,GAA6B,CAAjD,CAA3D,CAAR;AACA,oBAAI,KAAK,IAAL,IAAa,KAAK,MAAtB,EAA8B;AAC1B,yBAAK,IAAL,GAAY,KAAZ;AACH;AACD,oBAAI,KAAJ,EAAW;AACP,2BAAO,KAAP;AACH,iBAFD,MAEO,IAAI,KAAK,UAAT,EAAqB;AACxB;AACA,yBAAK,IAAI,CAAT,IAAc,MAAd,EAAsB;AAClB,6BAAK,CAAL,IAAU,OAAO,CAAP,CAAV;AACH;AACD,2BAAO,KAAP,CALwB,CAKV;AACjB;AACD,uBAAO,KAAP;AACH,aAjNQ;;AAmNb;AACA,kBAAK,gBAAY;AACT,oBAAI,KAAK,IAAT,EAAe;AACX,2BAAO,KAAK,GAAZ;AACH;AACD,oBAAI,CAAC,KAAK,MAAV,EAAkB;AACd,yBAAK,IAAL,GAAY,IAAZ;AACH;;AAED,oBAAI,KAAJ,EACI,KADJ,EAEI,SAFJ,EAGI,KAHJ;AAIA,oBAAI,CAAC,KAAK,KAAV,EAAiB;AACb,yBAAK,MAAL,GAAc,EAAd;AACA,yBAAK,KAAL,GAAa,EAAb;AACH;AACD,oBAAI,QAAQ,KAAK,aAAL,EAAZ;AACA,qBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AACnC,gCAAY,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAK,KAAL,CAAW,MAAM,CAAN,CAAX,CAAlB,CAAZ;AACA,wBAAI,cAAc,CAAC,KAAD,IAAU,UAAU,CAAV,EAAa,MAAb,GAAsB,MAAM,CAAN,EAAS,MAAvD,CAAJ,EAAoE;AAChE,gCAAQ,SAAR;AACA,gCAAQ,CAAR;AACA,4BAAI,KAAK,OAAL,CAAa,eAAjB,EAAkC;AAC9B,oCAAQ,KAAK,UAAL,CAAgB,SAAhB,EAA2B,MAAM,CAAN,CAA3B,CAAR;AACA,gCAAI,UAAU,KAAd,EAAqB;AACjB,uCAAO,KAAP;AACH,6BAFD,MAEO,IAAI,KAAK,UAAT,EAAqB;AACxB,wCAAQ,KAAR;AACA,yCAFwB,CAEd;AACb,6BAHM,MAGA;AACH;AACA,uCAAO,KAAP;AACH;AACJ,yBAXD,MAWO,IAAI,CAAC,KAAK,OAAL,CAAa,IAAlB,EAAwB;AAC3B;AACH;AACJ;AACJ;AACD,oBAAI,KAAJ,EAAW;AACP,4BAAQ,KAAK,UAAL,CAAgB,KAAhB,EAAuB,MAAM,KAAN,CAAvB,CAAR;AACA,wBAAI,UAAU,KAAd,EAAqB;AACjB,+BAAO,KAAP;AACH;AACD;AACA,2BAAO,KAAP;AACH;AACD,oBAAI,KAAK,MAAL,KAAgB,EAApB,EAAwB;AACpB,2BAAO,KAAK,GAAZ;AACH,iBAFD,MAEO;AACH,2BAAO,KAAK,UAAL,CAAgB,4BAA4B,KAAK,QAAL,GAAgB,CAA5C,IAAiD,wBAAjD,GAA4E,KAAK,YAAL,EAA5F,EAAiH;AACpH,8BAAM,EAD8G;AAEpH,+BAAO,IAF6G;AAGpH,8BAAM,KAAK;AAHyG,qBAAjH,CAAP;AAKH;AACJ,aA3QQ;;AA6Qb;AACA,iBAAI,SAAS,GAAT,GAAe;AACX,oBAAI,IAAI,KAAK,IAAL,EAAR;AACA,oBAAI,CAAJ,EAAO;AACH,2BAAO,CAAP;AACH,iBAFD,MAEO;AACH,2BAAO,KAAK,GAAL,EAAP;AACH;AACJ,aArRQ;;AAuRb;AACA,mBAAM,SAAS,KAAT,CAAe,SAAf,EAA0B;AACxB,qBAAK,cAAL,CAAoB,IAApB,CAAyB,SAAzB;AACH,aA1RQ;;AA4Rb;AACA,sBAAS,SAAS,QAAT,GAAoB;AACrB,oBAAI,IAAI,KAAK,cAAL,CAAoB,MAApB,GAA6B,CAArC;AACA,oBAAI,IAAI,CAAR,EAAW;AACP,2BAAO,KAAK,cAAL,CAAoB,GAApB,EAAP;AACH,iBAFD,MAEO;AACH,2BAAO,KAAK,cAAL,CAAoB,CAApB,CAAP;AACH;AACJ,aApSQ;;AAsSb;AACA,2BAAc,SAAS,aAAT,GAAyB;AAC/B,oBAAI,KAAK,cAAL,CAAoB,MAApB,IAA8B,KAAK,cAAL,CAAoB,KAAK,cAAL,CAAoB,MAApB,GAA6B,CAAjD,CAAlC,EAAuF;AACnF,2BAAO,KAAK,UAAL,CAAgB,KAAK,cAAL,CAAoB,KAAK,cAAL,CAAoB,MAApB,GAA6B,CAAjD,CAAhB,EAAqE,KAA5E;AACH,iBAFD,MAEO;AACH,2BAAO,KAAK,UAAL,CAAgB,SAAhB,EAA2B,KAAlC;AACH;AACJ,aA7SQ;;AA+Sb;AACA,sBAAS,SAAS,QAAT,CAAkB,CAAlB,EAAqB;AACtB,oBAAI,KAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B,GAAiC,KAAK,GAAL,CAAS,KAAK,CAAd,CAArC;AACA,oBAAI,KAAK,CAAT,EAAY;AACR,2BAAO,KAAK,cAAL,CAAoB,CAApB,CAAP;AACH,iBAFD,MAEO;AACH,2BAAO,SAAP;AACH;AACJ,aAvTQ;;AAyTb;AACA,uBAAU,SAAS,SAAT,CAAmB,SAAnB,EAA8B;AAChC,qBAAK,KAAL,CAAW,SAAX;AACH,aA5TQ;;AA8Tb;AACA,4BAAe,SAAS,cAAT,GAA0B;AACjC,uBAAO,KAAK,cAAL,CAAoB,MAA3B;AACH,aAjUQ;AAkUb,qBAAS,EAAC,QAAO,IAAR,EAlUI;AAmUb,2BAAe,SAAS,SAAT,CAAmB,EAAnB,EAAsB,GAAtB,EAA0B,yBAA1B,EAAoD,QAApD,EAA8D;AAC7E,oBAAI,UAAQ,QAAZ;AACA,wBAAO,yBAAP;AACA,yBAAK,CAAL;AAAO;AACP;AACA,yBAAK,CAAL;AAAO,+BAAO,EAAP;AACP;AACA,yBAAK,CAAL;AAAO,+BAAO,EAAP;AACP;AACA,yBAAK,CAAL;AAAO,+BAAO,EAAP;AACP;AACA,yBAAK,CAAL;AAAO,+BAAO,EAAP;AACP;AACA,yBAAK,CAAL;AAAO,+BAAO,EAAP;AACP;AACA,yBAAK,CAAL;AAAO,+BAAO,CAAP;AACP;AACA,yBAAK,CAAL;AAAO,+BAAO,CAAP;AACP;AACA,yBAAK,CAAL;AAAO,6BAAK,KAAL,CAAW,QAAX,EAAoC,OAAO,EAAP;AAC3C;AACA,yBAAK,CAAL;AAAO,+BAAO,EAAP;AACP;AACA,yBAAK,EAAL;AAAQ,6BAAK,QAAL,GAAoC,OAAO,EAAP;AAC5C;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,+BAAO,GAAP;AACR;AACA,yBAAK,EAAL;AAAQ,6BAAK,KAAL,CAAW,YAAX,EAAoC,OAAO,EAAP;AAC5C;AACA,yBAAK,EAAL;AAAQ,+BAAO,EAAP;AACR;AACA,yBAAK,EAAL;AAAQ,6BAAK,QAAL,GAAoC,OAAO,EAAP;AAC5C;AACA,yBAAK,EAAL;AAAQ,+BAAO,CAAP;AACR;AACA,yBAAK,EAAL;AAAQ,gCAAQ,GAAR,CAAY,IAAI,MAAhB;AACR;AAtDA;AAwDC,aA7XY;AA8Xb,mBAAO,CAAC,UAAD,EAAY,WAAZ,EAAwB,YAAxB,EAAqC,QAArC,EAA8C,qBAA9C,EAAoE,aAApE,EAAkF,QAAlF,EAA2F,SAA3F,EAAqG,SAArG,EAA+G,mCAA/G,EAAmJ,SAAnJ,EAA6J,yBAA7J,EAAuL,2BAAvL,EAAmN,SAAnN,EAA6N,SAA7N,EAAuO,QAAvO,EAAgP,SAAhP,EAA0P,QAA1P,EAAmQ,SAAnQ,EAA6Q,QAA7Q,EAAsR,QAAtR,EAA+R,SAA/R,EAAyS,QAAzS,EAAkT,YAAlT,EAA+T,QAA/T,EAAwU,QAAxU,EAAiV,QAAjV,CA9XM;AA+Xb,wBAAY,EAAC,cAAa,EAAC,SAAQ,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAT,EAAoB,aAAY,KAAhC,EAAd,EAAqD,UAAS,EAAC,SAAQ,CAAC,CAAD,EAAG,EAAH,EAAM,EAAN,EAAS,EAAT,CAAT,EAAsB,aAAY,KAAlC,EAA9D,EAAuG,WAAU,EAAC,SAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,EAA5B,EAA+B,EAA/B,EAAkC,EAAlC,EAAqC,EAArC,EAAwC,EAAxC,EAA2C,EAA3C,EAA8C,EAA9C,EAAiD,EAAjD,EAAoD,EAApD,EAAuD,EAAvD,CAAT,EAAoE,aAAY,IAAhF,EAAjH;AA/XC,SAAb;AAiYA,eAAO,KAAP;AACC,KAnYW,EAAZ;AAoYA,WAAO,KAAP,GAAe,KAAf;AACA,aAAS,MAAT,GAAmB;AACjB,aAAK,EAAL,GAAU,EAAV;AACD;AACD,WAAO,SAAP,GAAmB,MAAnB,CAA0B,OAAO,MAAP,GAAgB,MAAhB;AAC1B,WAAO,IAAI,MAAJ,EAAP;AACC,CAtnBY,EAAb;;AAynBA,IAAI,OAAO,OAAP,KAAmB,WAAnB,IAAkC,OAAO,OAAP,KAAmB,WAAzD,EAAsE;AACtE,YAAQ,MAAR,GAAiB,MAAjB;AACA,YAAQ,MAAR,GAAiB,OAAO,MAAxB;AACA,YAAQ,KAAR,GAAgB,YAAY;AAAE,eAAO,OAAO,KAAP,CAAa,KAAb,CAAmB,MAAnB,EAA2B,SAA3B,CAAP;AAA+C,KAA7E;AACA,YAAQ,IAAR,GAAe,SAAS,YAAT,CAAsB,IAAtB,EAA4B;AACvC,YAAI,CAAC,KAAK,CAAL,CAAL,EAAc;AACV,oBAAQ,GAAR,CAAY,YAAU,KAAK,CAAL,CAAV,GAAkB,OAA9B;AACA,oBAAQ,IAAR,CAAa,CAAb;AACH;AACD,YAAI,SAAS,QAAQ,IAAR,EAAc,YAAd,CAA2B,QAAQ,MAAR,EAAgB,SAAhB,CAA0B,KAAK,CAAL,CAA1B,CAA3B,EAA+D,MAA/D,CAAb;AACA,eAAO,QAAQ,MAAR,CAAe,KAAf,CAAqB,MAArB,CAAP;AACH,KAPD;AAQA,QAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,QAAQ,IAAR,KAAiB,MAAtD,EAA8D;AAC5D,gBAAQ,IAAR,CAAa,QAAQ,IAAR,CAAa,KAAb,CAAmB,CAAnB,CAAb;AACD;AACA","file":"parser.js","sourcesContent":["/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[5,10],$V2=[1,8],$V3=[1,9],$V4=[5,8,9,10],$V5=[1,21],$V6=[1,16],$V7=[1,17],$V8=[1,18],$V9=[1,19],$Va=[1,20],$Vb=[1,22],$Vc=[5,8,9,10,16,22],$Vd=[10,23,24,25,26,27,29],$Ve=[16,22];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"query\":3,\"query_repetition_plus0\":4,\"EOF\":5,\"filters\":6,\"filter\":7,\"AND\":8,\"OR\":9,\"FIELD\":10,\":\":11,\"value\":12,\"operator\":13,\"[\":14,\"value_list\":15,\"]\":16,\">\":17,\"<\":18,\">=\":19,\"<=\":20,\"=\":21,\",\":22,\"TRUE\":23,\"FALSE\":24,\"INTEGER\":25,\"FLOAT\":26,\"\\\"\":27,\"TEXT\":28,\"/\":29,\"PATTERN\":30,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",8:\"AND\",9:\"OR\",10:\"FIELD\",11:\":\",14:\"[\",16:\"]\",17:\">\",18:\"<\",19:\">=\",20:\"<=\",21:\"=\",22:\",\",23:\"TRUE\",24:\"FALSE\",25:\"INTEGER\",26:\"FLOAT\",27:\"\\\"\",28:\"TEXT\",29:\"/\",30:\"PATTERN\"},\nproductions_: [0,[3,2],[6,1],[6,3],[6,3],[7,3],[7,4],[7,5],[13,1],[13,1],[13,1],[13,1],[13,1],[15,1],[15,3],[12,1],[12,1],[12,1],[12,1],[12,3],[12,1],[12,3],[4,1],[4,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn yy.ast.query($$[$0-1], this._$);     \nbreak;\ncase 2:\nthis.$ = $$[$0];                                    \nbreak;\ncase 3:\nthis.$ = yy.ast.and($$[$0-2], $$[$0], this._$);                \nbreak;\ncase 4:\nthis.$ = yy.ast.or($$[$0-2], $$[$0], this._$);                 \nbreak;\ncase 5:\nthis.$ = yy.ast.filter($$[$0-2], '=', $$[$0], this._$);   \nbreak;\ncase 6:\nthis.$ = yy.ast.filter($$[$0-3], $$[$0-1], $$[$0], this._$);    \nbreak;\ncase 7:\nthis.$ = yy.ast.filter($$[$0-4], 'in', $$[$0-1], this._$);  \nbreak;\ncase 8:\n this.$ = '>';                   \nbreak;\ncase 9:\n this.$ = '<';                   \nbreak;\ncase 10:\n this.$ = '>=';                  \nbreak;\ncase 11:\n this.$ = '<=';                  \nbreak;\ncase 12:\n this.$ = '=';                   \nbreak;\ncase 13:\n this.$ = [$$[$0]];                  \nbreak;\ncase 14:\n this.$ = $$[$0-2].concat($$[$0]);         \nbreak;\ncase 15:\n this.$ = yy.ast.boolean(true, this._$);           \nbreak;\ncase 16:\n this.$ = yy.ast.boolean(false, this._$);          \nbreak;\ncase 17:\n this.$ = yy.ast.number(parseInt($$[$0]), this._$);    \nbreak;\ncase 18:\n this.$ = yy.ast.number(parseFloat($$[$0]), this._$);  \nbreak;\ncase 19:\n this.$ = yy.ast.string($$[$0-1], this._$);              \nbreak;\ncase 20:\n this.$ = yy.ast.string($$[$0], this._$);              \nbreak;\ncase 21:\n this.$ = yy.ast.regexp($$[$0-1], this._$);              \nbreak;\ncase 22:\nthis.$ = [$$[$0]];\nbreak;\ncase 23:\n$$[$0-1].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:4,10:$V0},{1:[3]},{5:[1,6],6:7,7:4,10:$V0},o($V1,[2,22],{8:$V2,9:$V3}),o($V4,[2,2]),{11:[1,10]},{1:[2,1]},o($V1,[2,23],{8:$V2,9:$V3}),{7:11,10:$V0},{7:12,10:$V0},{10:$V5,12:13,13:14,14:[1,15],17:[1,23],18:[1,24],19:[1,25],20:[1,26],21:[1,27],23:$V6,24:$V7,25:$V8,26:$V9,27:$Va,29:$Vb},o($V4,[2,3]),o($V4,[2,4]),o($V4,[2,5]),{10:$V5,12:28,23:$V6,24:$V7,25:$V8,26:$V9,27:$Va,29:$Vb},{10:$V5,12:30,15:29,23:$V6,24:$V7,25:$V8,26:$V9,27:$Va,29:$Vb},o($Vc,[2,15]),o($Vc,[2,16]),o($Vc,[2,17]),o($Vc,[2,18]),{28:[1,31]},o($Vc,[2,20]),{30:[1,32]},o($Vd,[2,8]),o($Vd,[2,9]),o($Vd,[2,10]),o($Vd,[2,11]),o($Vd,[2,12]),o($V4,[2,6]),{16:[1,33],22:[1,34]},o($Ve,[2,13]),{27:[1,35]},{29:[1,36]},o($V4,[2,7]),{10:$V5,12:37,23:$V6,24:$V7,25:$V8,26:$V9,27:$Va,29:$Vb},o($Vc,[2,19]),o($Vc,[2,21]),o($Ve,[2,14])],\ndefaultActions: {6:[2,1]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"flex\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skips whitespace */\nbreak;\ncase 1:return 23;\nbreak;\ncase 2:return 24;\nbreak;\ncase 3:return 11;\nbreak;\ncase 4:return 26;\nbreak;\ncase 5:return 25;\nbreak;\ncase 6:return 8;\nbreak;\ncase 7:return 9;\nbreak;\ncase 8:this.begin('REGEXP');               return 29;\nbreak;\ncase 9:return 30;\nbreak;\ncase 10:this.popState();                    return 29;\nbreak;\ncase 11:return 28;\nbreak;\ncase 12:return 10;\nbreak;\ncase 13:return 14;\nbreak;\ncase 14:return 16;\nbreak;\ncase 15:return 22;\nbreak;\ncase 16:return 19;\nbreak;\ncase 17:return 17;\nbreak;\ncase 18:return 20;\nbreak;\ncase 19:return 18;\nbreak;\ncase 20:return 21;\nbreak;\ncase 21:return '?';\nbreak;\ncase 22:this.begin('SC_LITERAL');           return 27;\nbreak;\ncase 23:return 28;\nbreak;\ncase 24:this.popState();                    return 27;\nbreak;\ncase 25:return 5;\nbreak;\ncase 26:console.log(yy_.yytext);\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:true)/,/^(?:false)/,/^(?::)/,/^(?:[0-9]+\\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:&)/,/^(?:\\|)/,/^(?:\\/)/,/^(?:([^*$&+^|:~<>(){}\\[\\]\\/\\\\]+))/,/^(?:\\/)/,/^(?:([^\\[\\]?<>:,\"\\/]+))/,/^(?:([^\\[\\]?<>:\\s,\"\\/]+))/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?:>=)/,/^(?:>)/,/^(?:<=)/,/^(?:<)/,/^(?:=)/,/^(?:\\?)/,/^(?:\")/,/^(?:[^\"]*)/,/^(?:\")/,/^(?:$)/,/^(?:.)/],\nconditions: {\"SC_LITERAL\":{\"rules\":[23,24,25],\"inclusive\":false},\"REGEXP\":{\"rules\":[9,10,11,25],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,22,25,26],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"]}